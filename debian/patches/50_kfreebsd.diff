Check for existence of net/if_pflog.h in addition on net/pfvar.h
to fix build on GNU/kFreeBSD (which ships the latter but not the
former).

Index: tcpdump/configure.in
===================================================================
--- tcpdump.orig/configure.in
+++ tcpdump/configure.in
@@ -37,7 +37,13 @@ AC_CHECK_HEADERS(net/pfvar.h, , , [#incl
 #include <sys/socket.h>
 #include <net/if.h>])
 if test "$ac_cv_header_net_pfvar_h" = yes; then
-	LOCALSRC="print-pflog.c $LOCALSRC"
+	AC_CHECK_HEADERS(net/if_pflog.h, , , [#include <sys/types.h>
+	#include <sys/socket.h>
+	#include <net/if.h>
+	#include <net/pfvar.h>])
+	if test "$ac_cv_header_net_if_pflog_h" = yes; then
+		LOCALSRC="print-pflog.c $LOCALSRC"
+	fi
 fi
 AC_CHECK_HEADERS(netinet/if_ether.h, , , [#include <sys/types.h>
 #include <sys/socket.h>])
Index: tcpdump/tcpdump.c
===================================================================
--- tcpdump.orig/tcpdump.c
+++ tcpdump/tcpdump.c
@@ -261,7 +261,7 @@ static const struct ndo_printer ndo_prin
 #ifdef DLT_PPP_ETHER
 	{ pppoe_if_print,	DLT_PPP_ETHER },
 #endif
-#if defined(DLT_PFLOG) && defined(HAVE_NET_PFVAR_H)
+#if defined(DLT_PFLOG) && defined(HAVE_NET_IF_PFLOG_H)
 	{ pflog_if_print,	DLT_PFLOG },
 #endif
 	{ token_if_print,	DLT_IEEE802 },
